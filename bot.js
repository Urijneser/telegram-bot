const express = require('express');
const axios = require('axios');
const app = express();
const PORT = process.env.PORT || 3000;

const BOT_TOKEN = "8384153568:AAHjkIpIVGRlpo-NmEJblXl7FDWyBkg9cj0";

app.use(express.json());

// –ì–õ–ê–í–ù–ê–Ø –°–¢–†–ê–ù–ò–¶–ê - –ø–æ–∫–∞–∂–µ—Ç –≤–∞—à URL
app.get('/', (req, res) => {
  const protocol = req.headers['x-forwarded-proto'] || 'http';
  const host = req.headers['x-forwarded-host'] || req.headers.host;
  const fullUrl = `${protocol}://${host}`;
  
  res.send(`
    <h1>ü§ñ Telegram Bot is Running!</h1>
    <p><strong>Your URL:</strong> ${fullUrl}</p>
    <p><strong>Set webhook:</strong> <a href="${fullUrl}/set-webhook">${fullUrl}/set-webhook</a></p>
    <p>–ü–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—Å—ã–ª–∫–∏ –≤—ã—à–µ - –Ω–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É –≤ Telegram!</p>
  `);
});

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞
app.get('/set-webhook', async (req, res) => {
  try {
    const protocol = req.headers['x-forwarded-proto'] || 'http';
    const host = req.headers['x-forwarded-host'] || req.headers.host;
    const webhookUrl = `${protocol}://${host}/webhook`;
    
    const url = `https://api.telegram.org/bot${BOT_TOKEN}/setWebhook?url=${webhookUrl}`;
    const response = await axios.get(url);
    
    res.json({
      success: true,
      message: "Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!",
      webhookUrl: webhookUrl,
      telegramResponse: response.data
    });
  } catch (error) {
    res.status(500).json({ 
      success: false,
      error: error.message 
    });
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç Telegram
app.post('/webhook', async (req, res) => {
  try {
    const update = req.body;
    console.log('üì® Received message:', update);

    if (update.message && update.message.text) {
      const chatId = update.message.chat.id;
      const text = update.message.text;

      await sendMessage(chatId, 
        `üéâ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! –°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!\n\n` +
        `–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: "${text}"\n\n` +
        `–°—Å—ã–ª–∫–∞: https://example.com`
      );
    }

    res.status(200).send('OK');
  } catch (error) {
    console.error('‚ùå Error:', error);
    res.status(200).send('OK');
  }
});

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
async function sendMessage(chatId, text) {
  try {
    const url = `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`;
    const payload = {
      chat_id: chatId,
      text: text
    };
    
    const response = await axios.post(url, payload);
    console.log('‚úÖ Message sent to:', chatId);
  } catch (error) {
    console.error('‚ùå Send error:', error.response?.data || error.message);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, '0.0.0.0', () => {
  console.log(`üöÄ Bot server running on port ${PORT}`);
  console.log(`üåê Server is ready for connections`);
});
